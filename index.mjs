// Copyright (c) 2024 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import{factory as s}from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-deep-get@v0.1.1-esm/index.mjs";import e from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-array@v0.1.1-esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@v0.1.1-esm/index.mjs";import{isPrimitive as r}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-boolean@v0.1.1-esm/index.mjs";import{isPrimitive as i}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-string@v0.1.1-esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@v0.1.0-esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@v0.2.0-esm/index.mjs";function p(s,e){return n(e)?o(e,"copy")&&(s.copy=e.copy,!r(s.copy))?new TypeError(t("invalid option. `%s` option must be a boolean. Option: `%s`.","copy",s.copy)):o(e,"sep")&&(s.sep=e.sep,!i(s.sep))?new TypeError(t("invalid option. `%s` option must be a string. Option: `%s`.","sep",s.sep)):null:new TypeError(t("invalid argument. Options argument must be an object. Value: `%s`.",e))}function m(r,i,n){var o,m,d,a,l;if(!e(r))throw new TypeError(t("invalid argument. First argument must be an array. Value: `%s`.",r));if(m={copy:!0,sep:"."},arguments.length>2&&(a=p(m,n)))throw a;for(d=m.copy?new Array(r.length):r,o=s(i,{sep:m.sep}),l=0;l<r.length;l++)d[l]=o(r[l]);return d}export{m as default};
//# sourceMappingURL=index.mjs.map
